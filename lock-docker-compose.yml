version: '3.6'
networks:
  grab: {}

services:
  zookeeper1:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    container_name: zookeeper

  kafka1:
    image: wurstmeister/kafka
    container_name: kafka
    ports:java --version
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPIC: "my_topic:1:3"

  spring:
    image: maven:3-jdk-8
    ports:
      - 8080:8080
    # restart: unless-stopped
    working_dir: /opt/app
    volumes:
      - .:/opt/app
    #      - ./cache/maven:/var/maven/.m2
    #      - ./cache/cdn:${CDN_PATH:-/opt/app/cache/cdn}
    #user: ${UID:-1000}:${GROUPS:-1000}
    environment:
      - TZ=Asia/Jakarta
      - SPRING_DATASOURCE_URL=jdbc:postgresql://containers-us-west-20.railway.app:6150/railway
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=H87wWCoq4XxbMFDwzm20
      - SPRING_PROFILES_CDN_PATHACTIVE=${APP_ENV:-railway}
      - SECURITY_JWT_ENABLED=true
      - SERVER_SERVLET_CONTEXT_PATH=/api
#      - MAVEN_CONFIG=/var/maven/.m2
#      - FILE_UPLOADDIR=${CDN_PATH:-/opt/app/cache/cdn/}
#      - FILE_SHOW_URL=${CDN_BASE_URL:-http://172.20.2.153:8090/cdn/}
#      - APP_UPLOADTO_CDN=${CDN_PATH:-/opt/app/cache/cdn/}
    networks:
      grab:
        aliases:
          - oauth2.api
    command: [ "mvn", "-Duser.home=/var/maven", "spring-boot:run" ]